{"version":3,"file":"bundle.js","mappings":"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","sources":["webpack://minesweeper/./src/scripts/addMinesNumber.js","webpack://minesweeper/./src/scripts/openCell.js","webpack://minesweeper/./src/scripts/playClickSound.js","webpack://minesweeper/./src/scripts/saveGame.js","webpack://minesweeper/./src/scripts/setFlag.js","webpack://minesweeper/./src/scripts/createElementWithConfig.js","webpack://minesweeper/./src/scripts/generateOverlay.js","webpack://minesweeper/./src/scripts/gameOver.js","webpack://minesweeper/./src/scripts/setResult.js","webpack://minesweeper/./src/scripts/timer.js","webpack://minesweeper/./src/scripts/firstStep.js","webpack://minesweeper/./src/scripts/generateMines.js","webpack://minesweeper/./src/scripts/generateBoard.js","webpack://minesweeper/./src/scripts/generateMain.js","webpack://minesweeper/./src/scripts/generateControlsPanel.js","webpack://minesweeper/./src/scripts/resetGame.js","webpack://minesweeper/./src/index.js","webpack://minesweeper/./src/scripts/generateSettings.js","webpack://minesweeper/./src/scripts/swithTheme.js","webpack://minesweeper/./src/scripts/soundIconSwitcher.js","webpack://minesweeper/./src/scripts/generateResultModal.js","webpack://minesweeper/./src/scripts/generateAboutModal.js","webpack://minesweeper/./src/scripts/modeHandler.js","webpack://minesweeper/./src/scripts/loadGame.js"],"sourcesContent":["export const createMatrix = () => {\n  const matrix = [];\n  const cells = document.querySelectorAll('.cell');\n  const matrixLineLength = Math.sqrt(cells.length);\n\n  for (let i = 0; i < cells.length; i += matrixLineLength) {\n    const matrixLine = [];\n\n    for (let j = 0; j < matrixLineLength; j += 1) {\n      matrixLine.push(cells[i + j]);\n    }\n\n    matrix.push(matrixLine);\n  }\n  return matrix;\n};\n\nconst getSurround = () => {\n  const matrix = createMatrix();\n  const surroundMinesCount = [];\n  for (let y = 0; y < matrix[0].length; y += 1) {\n    for (let x = 0; x < matrix[0].length; x += 1) {\n      const arr = [];\n      // test [y]?. -unnecessary ?.\n      arr.push(matrix[y - 1]?.[x]);\n      arr.push(matrix[y - 1]?.[x + 1]);\n      arr.push(matrix[y - 1]?.[x - 1]);\n      arr.push(matrix[y]?.[x + 1]);\n      arr.push(matrix[y]?.[x - 1]);\n      arr.push(matrix[y + 1]?.[x + 1]);\n      arr.push(matrix[y + 1]?.[x]);\n      arr.push(matrix[y + 1]?.[x - 1]);\n      surroundMinesCount.push(arr\n        .filter((item) => item && item.classList.contains('isBomb')).length);\n    }\n  }\n\n  return surroundMinesCount;\n};\n\nconst addMinesNumber = () => {\n  const cells = document.querySelectorAll('.cell');\n  const surroundMinesCount = getSurround();\n\n  cells.forEach((item, index) => {\n    const cell = item;\n    if (!cell.classList.contains('isBomb') && surroundMinesCount[index]) {\n      cell.dataset.number = surroundMinesCount[index];\n    }\n  });\n};\n\nexport default addMinesNumber;\n","import { createMatrix } from './addMinesNumber';\n\nconst open = (item) => {\n  const cell = item;\n  cell.classList.add('is-open');\n  cell.textContent = cell.dataset.number;\n};\n\nconst openAdditionalCell = (event) => {\n  const cell = event;\n  open(cell);\n\n  const matrix = createMatrix();\n  const cells = document.querySelectorAll('.cell');\n\n  const cellIndex = [...cells].findIndex((item) => item === cell);\n  let y;\n  let x;\n  if (document.boardSize === 10) {\n    // first variant befor upgrade to big board option, just for compare\n    y = cellIndex > document.boardSize - 1 ? +cellIndex.toString()[0] : 0;\n    x = cellIndex > document.boardSize - 1 ? +cellIndex.toString()[1] : cellIndex;\n  } else {\n    // universal beautifull solution\n    y = Math.floor(cellIndex / document.boardSize);\n    x = cellIndex % document.boardSize;\n  }\n\n  const arr = [];\n  arr.push(matrix[y - 1]?.[x]);\n  arr.push(matrix[y - 1]?.[x + 1]);\n  arr.push(matrix[y - 1]?.[x - 1]);\n  arr.push(matrix[y]?.[x + 1]);\n  arr.push(matrix[y]?.[x - 1]);\n  arr.push(matrix[y + 1]?.[x + 1]);\n  arr.push(matrix[y + 1]?.[x]);\n  arr.push(matrix[y + 1]?.[x - 1]);\n\n  const normalizedArr = arr.filter((item) => item && item.textContent !== '🚩');\n\n  normalizedArr.forEach((item) => {\n    if (!item.dataset.number && !item.classList.contains('is-open')) {\n      openAdditionalCell(item);\n    } else {\n      open(item);\n    }\n  });\n  // open this part, if you decide throw flag without mine when area opens\n  /* const activeFlags = [...cells].filter((item) => item.textContent === '🚩').length;\n  document.flagCount = document.minesCount - activeFlags;\n  document.querySelector('.counter').textContent = `Mines count: ${document.flagCount}`; */\n};\n\nconst openCell = (event) => {\n  const cell = event.target;\n  if (cell.classList.contains('cell') && !cell.classList.contains('isBomb') && !cell.textContent) {\n    if (!cell.classList.contains('is-open')) {\n      document.querySelector('.moves-count').innerHTML = `Your moves: ${document.movesCount += 1}`;\n\n      if (document.querySelector('.sound-switcher').checked) {\n        new Audio('../src/assets/sounds/empty-cell.mp3').play();\n      }\n    }\n    open(cell);\n    if (!cell.dataset.number) {\n      openAdditionalCell(cell);\n    }\n  }\n};\n\nexport default openCell;\n","const playClickSound = () => {\n  if (document.querySelector('.sound-switcher').checked) {\n    new Audio('../src/assets/sounds/click.mp3').play();\n  }\n};\n\nexport default playClickSound;\n","import playClickSound from './playClickSound';\n\nconst saveGame = () => {\n  if (!document.querySelector('.bomb')\n    && !document.body.classList.contains('win')\n    && document.querySelector('.isBomb')) {\n    playClickSound();\n\n    const main = document.querySelector('.main');\n    const html = main.innerHTML;\n    const layoutState = [...document.body.classList];\n    const timer = parseInt(document.querySelector('.timer').textContent.slice(6), 10);\n    const {\n      boardSize, minesCount, movesCount, flagCount,\n    } = document;\n\n    const savedData = {\n      html, layoutState, boardSize, minesCount, movesCount, flagCount, timer,\n    };\n\n    const jsonData = JSON.stringify(savedData);\n    localStorage.setItem('savedGame', jsonData);\n  }\n};\n\nexport default saveGame;\n","const setFlag = (event) => {\n  const cell = event.target;\n  const counter = document.querySelector('.counter');\n  event.preventDefault();\n\n  if (cell.classList.contains('cell') && !cell.classList.contains('is-open')) {\n    const audio = new Audio('../src/assets/sounds/flag.mp3');\n\n    if (!cell.textContent) {\n      if (document.querySelector('.sound-switcher').checked) {\n        audio.play();\n      }\n\n      cell.textContent = '🚩';\n      document.flagCount -= 1;\n      counter.textContent = `Mines count: ${document.flagCount}`;\n    } else {\n      if (document.querySelector('.sound-switcher').checked) {\n        audio.play();\n      }\n      cell.textContent = '';\n      document.flagCount += 1;\n      counter.textContent = `Mines count: ${document.flagCount}`;\n    }\n  }\n};\n\nexport default setFlag;\n","const createElementWithConfig = (config) => {\n  const {\n    tagName, classes, attributes, textContent, children,\n  } = config;\n\n  const element = document.createElement(tagName);\n\n  if (classes) {\n    classes.forEach((className) => {\n      element.classList.add(className);\n    });\n  }\n\n  if (attributes) {\n    Object.entries(attributes).forEach(([key, value]) => {\n      element.setAttribute(key, value);\n    });\n  }\n\n  if (textContent) {\n    element.textContent = textContent;\n  }\n\n  if (children) {\n    children.forEach((childConfig) => {\n      const childElement = createElementWithConfig(childConfig);\n      element.append(childElement);\n    });\n  }\n\n  return element;\n};\n\nexport default createElementWithConfig;\n","import createElementWithConfig from './createElementWithConfig';\n\nconst closeModal = (event) => {\n  const overlay = document.querySelector('.overlay');\n  if (!event.target.closest('.modal')) {\n    overlay.remove();\n    document.body.style.overflow = '';\n  } else if (event.target.closest('.btn-modal')) {\n    overlay.remove();\n    document.body.style.overflow = '';\n  }\n};\n\nconst generateOverlay = () => {\n  const overlayConfig = {\n    tagName: 'div',\n    classes: ['overlay'],\n  };\n  const overlay = createElementWithConfig(overlayConfig);\n\n  document.body.append(overlay);\n  document.body.style.overflow = 'hidden';\n  overlay.addEventListener('click', closeModal);\n};\n\nexport default generateOverlay;\n","import openCell from './openCell';\nimport saveGame from './saveGame';\nimport setFlag from './setFlag';\nimport setResult from './setResult';\nimport generateOverlay from './generateOverlay';\nimport createElementWithConfig from './createElementWithConfig';\n\nconst generateMessage = (result) => {\n  generateOverlay();\n  const overlay = document.querySelector('.overlay');\n\n  const wraperConfig = {\n    tagName: 'div',\n    classes: ['modal', 'gameover-message'],\n  };\n  const wraper = createElementWithConfig(wraperConfig);\n\n  const modalBtnConfig = {\n    tagName: 'button',\n    classes: ['btn-modal'],\n    textContent: '✖',\n  };\n  const modalBtn = createElementWithConfig(modalBtnConfig);\n  wraper.append(modalBtn);\n\n  const textConfig = {\n    tagName: 'p',\n    classes: ['about__text'],\n    textContent: `${result}`,\n  };\n  const text = createElementWithConfig(textConfig);\n  wraper.append(text);\n\n  overlay.append(wraper);\n};\n\nconst gameOver = (event) => {\n  const btn = document.querySelector('.btn');\n\n  const soundSwitcher = document.querySelector('.sound-switcher');\n\n  if (event.target.textContent !== '🚩') {\n    if (event.target.classList.contains('isBomb')) {\n      const bombs = [...document.querySelectorAll('.cell')].filter((item) => item.classList.contains('isBomb'));\n      const result = 'Game over. Try again';\n      bombs.forEach((item) => {\n        const bomb = document.createElement('div');\n        bomb.classList.add('bomb');\n        item.classList.add('is-open');\n        item.textContent = '';\n        item.append(bomb);\n      });\n      if (soundSwitcher.checked) {\n        new Audio('../src/assets/sounds/bomb.mp3').play();\n      }\n      event.target.firstElementChild.style.backgroundColor = 'red';\n\n      clearInterval(document.timer);\n      btn.textContent = '😩';\n      generateMessage(result);\n      removeListeners();\n    } else {\n      const cells = document.querySelectorAll('.cell');\n      const closedCells = [...cells].filter((item) => !item.classList.contains('is-open'));\n      const movesCount = document.querySelector('.moves-count').textContent.slice(11);\n      const time = document.querySelector('.timer').textContent.slice(7);\n      const result = `Hooray! You found all mines in ${time} and ${movesCount} moves!`;\n\n      if (closedCells.length === document.minesCount) {\n        if (soundSwitcher.checked) {\n          new Audio('../src/assets/sounds/win.mp3').play();\n        }\n        clearInterval(document.timer);\n        btn.textContent = '🤩';\n        document.body.classList.add('win');\n\n        removeListeners();\n        setResult();\n        generateMessage(result);\n      }\n    }\n  }\n};\n\nfunction removeListeners() {\n  const board = document.querySelector('.board');\n\n  board.removeEventListener('click', openCell);\n  board.removeEventListener('contextmenu', setFlag);\n  board.removeEventListener('click', gameOver);\n  board.removeEventListener('click', saveGame);\n}\n\nexport default gameOver;\n","const setResult = () => {\n  const gameId = +localStorage.getItem('gameId') + 1 || 1;\n  if (gameId > 10) {\n    localStorage.removeItem(`${gameId - 10}`);\n  }\n  const mode = document.body.classList.value.includes('layout')\n    ? document.body.classList.value.split(' ')[0].slice(0, 7)\n    : 'easy';\n  const movesCount = document.querySelector('.moves-count').textContent.slice(11);\n  const time = document.querySelector('.timer').textContent.slice(7);\n  localStorage.setItem(gameId, `Game #${gameId} _ Mode: ${mode} _ Time: ${time} _ Moves: ${movesCount}`);\n\n  localStorage.setItem('gameId', gameId);\n};\n\nexport default setResult;\n","const setTimer = (start = 0) => {\n  let seconds = start;\n\n  document.timer = setInterval(() => {\n    document.querySelector('.timer').innerHTML = `Timer: ${seconds += 1} sec`;\n  }, 1000);\n};\n\nexport default setTimer;\n","import generateMines from './generateMines';\nimport addMinesNumber from './addMinesNumber';\nimport setTimer from './timer';\nimport openCell from './openCell';\n\nconst firstStep = (event) => {\n  if (event.target.classList.contains('cell') && event.target.textContent !== '🚩') {\n    const board = document.querySelector('.board');\n    board.removeEventListener('click', firstStep);\n    generateMines(document.minesCount, event);\n    addMinesNumber();\n    setTimer();\n    document.querySelector('.btn').textContent = '😎';\n  }\n};\n\nexport default firstStep;\n","const getRandomNumber = (min, max) => Math.floor(Math.random() * (max - min + 1)) + min;\n\nconst generateRandomNumberArr = (length, exclude) => {\n  const arr = [];\n\n  while (arr.length < length) {\n    const number = getRandomNumber(0, document.boardSize ** 2 - 1);\n    if (!arr.includes(number) && number !== exclude) {\n      arr.push(number);\n    }\n  }\n  return arr;\n};\n\nconst generateMines = (minesCount, event) => {\n  const cells = document.querySelectorAll('.cell');\n  const firstClick = [...cells].findIndex((item) => item === event.target);\n  const randomNumberArr = generateRandomNumberArr(minesCount, firstClick);\n\n  const minedCells = [...cells].filter((item, index) => randomNumberArr.includes(index));\n\n  minedCells.forEach((item) => item.classList.add('isBomb'));\n};\n\nexport default generateMines;\n","import gameOver from './gameOver';\nimport openCell from './openCell';\nimport setFlag from './setFlag';\nimport firstStep from './firstStep';\nimport generateControlsPanel from './generateControlsPanel';\nimport generateMain from './generateMain';\nimport playClickSound from './playClickSound';\n\nexport const addListeners = () => {\n  const board = document.getElementById('board');\n\n  board.addEventListener('click', firstStep);\n  board.addEventListener('click', openCell);\n  board.addEventListener('click', gameOver);\n  board.addEventListener('contextmenu', setFlag);\n};\n\nconst generateBoard = () => {\n  document.movesCount = 0;\n\n  const main = generateMain();\n  main.prepend(generateControlsPanel());\n  document.body.append(main);\n\n  addListeners();\n\n  const resetGame = () => {\n    playClickSound();\n\n    clearInterval(document.timer);\n    document.querySelector('.timer').textContent = 'Timer: 0 sec';\n    document.querySelector('main').remove();\n    document.body.classList.remove('win');\n    generateBoard();\n  };\n  // reset game\n  document.querySelector('.btn').addEventListener('click', resetGame);\n};\n\nexport default generateBoard;\n","import createElementWithConfig from './createElementWithConfig';\n\nconst generateMain = () => {\n  const mainConfig = {\n    tagName: 'main',\n    classes: ['main'],\n  };\n  const main = createElementWithConfig(mainConfig);\n\n  const boardConfig = {\n    tagName: 'div',\n    classes: ['board'],\n    attributes: {\n      id: 'board',\n    },\n  };\n  const board = createElementWithConfig(boardConfig);\n\n  const cellConfig = {\n    tagName: 'div',\n    classes: ['cell'],\n  };\n  for (let i = 0; i < document.boardSize ** 2; i += 1) {\n    const cell = createElementWithConfig(cellConfig);\n    board.append(cell);\n  }\n\n  main.append(board);\n\n  return main;\n};\n\nexport default generateMain;\n","import createElementWithConfig from './createElementWithConfig';\n\nconst generateControlsPanel = () => {\n  const controlsPanelConfig = {\n    tagName: 'div',\n    classes: ['controls-panel'],\n  };\n  const controlsPanel = createElementWithConfig(controlsPanelConfig);\n\n  const movesCountConfig = {\n    tagName: 'p',\n    classes: ['moves-count'],\n    textContent: 'Your moves: 0',\n  };\n  const movesCount = createElementWithConfig(movesCountConfig);\n  controlsPanel.append(movesCount);\n\n  const btnConfig = {\n    tagName: 'button',\n    classes: ['btn'],\n    textContent: '😉',\n  };\n  const btn = createElementWithConfig(btnConfig);\n  controlsPanel.append(btn);\n\n  document.flagCount = document.minesCount;\n  const counterConfig = {\n    tagName: 'p',\n    classes: ['counter'],\n    textContent: `Mines count: ${document.flagCount}`,\n  };\n  const counter = createElementWithConfig(counterConfig);\n  controlsPanel.append(counter);\n\n  return controlsPanel;\n};\n\nexport default generateControlsPanel;\n","import generateBoard from './generateBoard';\n\nconst resetGame = () => {\n  clearInterval(document.timer);\n  document.querySelector('.timer').textContent = 'Timer: 0 sec';\n  document.querySelector('main').remove();\n  document.body.classList.remove('win');\n  generateBoard();\n};\n\nexport default resetGame;\n","import './styles/style.scss';\nimport generateBoard from './scripts/generateBoard';\nimport generateSettings from './scripts/generateSettings';\nimport generateResultModal from './scripts/generateResultModal';\nimport generateAboutModal from './scripts/generateAboutModal';\nimport switchTheme from './scripts/swithTheme';\nimport soundIconSwitcher from './scripts/soundIconSwitcher';\nimport resetGame from './scripts/resetGame';\nimport modeHandler from './scripts/modeHandler';\nimport saveGame from './scripts/saveGame';\nimport loadGame from './scripts/loadGame';\n\nconst handleMineCountChange = (event) => {\n  document.querySelector('.counter').textContent = `Mines count: ${event.target.value}`;\n  document.minesCount = +event.target.value;\n  resetGame();\n};\n\ndocument.minesCount = 10;\ndocument.boardSize = 10;\n// init\ndocument.body.append(generateSettings());\ngenerateBoard();\n// switchers\ndocument.querySelector('.theme-switcher').addEventListener('click', switchTheme);\ndocument.querySelector('label').addEventListener('click', soundIconSwitcher);\n// generate modal\ndocument.querySelector('.btn-results').addEventListener('click', generateResultModal);\ndocument.querySelector('.about__btn').addEventListener('click', generateAboutModal);\n// mode settings\ndocument.querySelector('.mine-counter-selector').addEventListener('input', handleMineCountChange);\ndocument.querySelector('.mode').addEventListener('click', modeHandler);\ndocument.querySelector('.save').addEventListener('click', saveGame);\ndocument.querySelector('.load').addEventListener('click', loadGame);\n","import createElementWithConfig from './createElementWithConfig';\n\nconst generateSettings = () => {\n  const loadGameContainerConfig = {\n    tagName: 'div',\n    classes: ['load-game-container'],\n    children: [\n      { tagName: 'button', classes: ['save'], textContent: 'Save' },\n      { tagName: 'button', classes: ['load'], textContent: 'Load' },\n      { tagName: 'button', classes: ['about__btn'], textContent: 'About' },\n    ],\n  };\n\n  const modeContainerConfig = {\n    tagName: 'div',\n    classes: ['mode'],\n    children: [\n      { tagName: 'button', classes: ['easy-mode'], textContent: 'Easy' },\n      { tagName: 'button', classes: ['medium-mode'], textContent: 'Medium' },\n      { tagName: 'button', classes: ['suicide-mode'], textContent: 'Suicide' },\n      { tagName: 'p', classes: ['settings-subtitle'], textContent: 'Mines:' },\n      {\n        tagName: 'input',\n        classes: ['mine-counter-selector'],\n        attributes: {\n          type: 'range', value: '10', min: '10', max: '99',\n        },\n      },\n    ],\n  };\n\n  const settingsContainerConfig = {\n    tagName: 'div',\n    classes: ['settings', 'controls-panel'],\n    children: [\n      { tagName: 'button', classes: ['btn-results'], textContent: 'results' },\n      { tagName: 'p', classes: ['timer'], textContent: 'Timer: 0 sec' },\n      {\n        tagName: 'label',\n        children: [\n          { tagName: 'span', textContent: '🔔' },\n          { tagName: 'input', classes: ['sound-switcher'], attributes: { type: 'checkbox', checked: 'true' } },\n        ],\n      },\n      { tagName: 'button', classes: ['theme-switcher'] },\n    ],\n  };\n\n  const headerConfig = {\n    tagName: 'header',\n    classes: ['header'],\n    children: [\n      loadGameContainerConfig,\n      modeContainerConfig,\n      settingsContainerConfig,\n    ],\n  };\n\n  const header = createElementWithConfig(headerConfig);\n  return header;\n};\n\nexport default generateSettings;\n","import playClickSound from './playClickSound';\n\nconst switchTheme = (event) => {\n  playClickSound();\n  event.target.classList.toggle('is-dark');\n  document.body.classList.toggle('dark-theme');\n};\n\nexport default switchTheme;\n","import playClickSound from './playClickSound';\n\nconst soundIconSwitcher = (event) => {\n  playClickSound();\n\n  const label = event.target;\n  if (document.querySelector('.sound-switcher').checked) {\n    label.textContent = '🔕';\n  } else {\n    label.textContent = '🔔';\n  }\n};\n\nexport default soundIconSwitcher;\n","import generateOverlay from './generateOverlay';\nimport playClickSound from './playClickSound';\nimport createElementWithConfig from './createElementWithConfig';\n\nconst getResultList = () => {\n  const gameId = +localStorage.getItem('gameId');\n\n  const resultsList = [];\n  for (let i = 0; i < 10; i += 1) {\n    const item = localStorage.getItem(gameId - i);\n    resultsList.push(item);\n  }\n  return resultsList;\n};\n\nconst generateResultModal = () => {\n  playClickSound();\n\n  generateOverlay();\n  const overlay = document.querySelector('.overlay');\n\n  const titleConfig = {\n    tagName: 'h2',\n    classes: ['modal-title'],\n    textContent: 'Latest Results',\n  };\n  const title = createElementWithConfig(titleConfig);\n  overlay.append(title);\n\n  const resultsList = getResultList();\n\n  const listConfig = {\n    tagName: 'ul',\n    classes: ['modal'],\n  };\n  const list = createElementWithConfig(listConfig);\n\n  const btnConfig = {\n    tagName: 'button',\n    classes: ['btn-modal'],\n    textContent: '✖',\n  };\n  const btn = createElementWithConfig(btnConfig);\n  list.append(btn);\n\n  resultsList.forEach((item) => {\n    const liConfig = {\n      tagName: 'li',\n      textContent: item,\n    };\n    const li = createElementWithConfig(liConfig);\n    list.append(li);\n  });\n\n  overlay.append(list);\n};\n\nexport default generateResultModal;\n","import generateOverlay from './generateOverlay';\nimport playClickSound from './playClickSound';\nimport createElementWithConfig from './createElementWithConfig';\n\nconst generateAboutModal = () => {\n  playClickSound();\n\n  generateOverlay();\n  const overlay = document.querySelector('.overlay');\n\n  const titleConfig = {\n    tagName: 'h2',\n    classes: ['modal-title'],\n    textContent: 'About Game',\n  };\n  const title = createElementWithConfig(titleConfig);\n  overlay.append(title);\n\n  const wraperConfig = {\n    tagName: 'div',\n    classes: ['modal', 'about'],\n  };\n  const wraper = createElementWithConfig(wraperConfig);\n\n  const modalBtnConfig = {\n    tagName: 'button',\n    classes: ['btn-modal'],\n    textContent: '✖',\n  };\n  const modalBtn = createElementWithConfig(modalBtnConfig);\n  wraper.append(modalBtn);\n\n  const imgConfig = {\n    tagName: 'img',\n    classes: ['about__img'],\n    attributes: {\n      src: '../src/assets/img/about.png',\n    },\n  };\n  const img = createElementWithConfig(imgConfig);\n  wraper.append(img);\n\n  const textConfig = {\n    tagName: 'a',\n    classes: ['about__text'],\n    attributes: {\n      href: 'https://github.com/glitch-surfer',\n    },\n    textContent: 'Made by Glitch_surfer',\n  };\n  const text = createElementWithConfig(textConfig);\n  wraper.append(text);\n\n  overlay.append(wraper);\n};\n\nexport default generateAboutModal;\n","import resetGame from './resetGame';\nimport playClickSound from './playClickSound';\n\nconst modeHandler = (event) => {\n  playClickSound();\n\n  if (event.target.classList.contains('easy-mode')) {\n    document.boardSize = 10;\n    document.body.classList.remove('medium-layout');\n    document.body.classList.remove('suicide-layout');\n    document.querySelector('.mine-counter-selector').value = 10;\n    document.minesCount = 10;\n    resetGame();\n  } else if (event.target.classList.contains('medium-mode')) {\n    document.boardSize = 15;\n    document.body.classList.remove('suicide-layout');\n    document.body.classList.add('medium-layout');\n    document.querySelector('.mine-counter-selector').value = 25;\n    document.minesCount = 25;\n    resetGame();\n  } else if (event.target.classList.contains('suicide-mode')) {\n    document.boardSize = 25;\n    document.body.classList.remove('medium-layout');\n    document.body.classList.add('suicide-layout');\n    document.querySelector('.mine-counter-selector').value = 99;\n    document.minesCount = 99;\n    resetGame();\n  }\n};\n\nexport default modeHandler;\n","import resetGame from './resetGame';\nimport openCell from './openCell';\nimport setFlag from './setFlag';\nimport gameOver from './gameOver';\nimport setTimer from './timer';\nimport playClickSound from './playClickSound';\n\nconst loadGame = () => {\n  playClickSound();\n\n  if (localStorage.getItem('savedGame')) {\n    clearInterval(document.timer);\n\n    const savedJson = localStorage.getItem('savedGame');\n    const {\n      html, layoutState, boardSize, minesCount, movesCount, flagCount, timer,\n    } = JSON.parse(savedJson);\n\n    document.minesCount = minesCount;\n    document.boardSize = boardSize;\n    document.movesCount = movesCount;\n    document.flagCount = flagCount;\n\n    const main = document.querySelector('main');\n    main.innerHTML = html;\n    document.body.className = layoutState.join(' ');\n\n    const board = document.getElementById('board');\n    board.addEventListener('click', openCell);\n    board.addEventListener('click', gameOver);\n    board.addEventListener('contextmenu', setFlag);\n    document.querySelector('.btn').addEventListener('click', resetGame);\n\n    document.querySelector('.mine-counter-selector').value = minesCount;\n    setTimer(timer);\n  }\n};\n\nexport default loadGame;\n"],"names":["createMatrix","matrix","cells","document","querySelectorAll","matrixLineLength","Math","sqrt","length","i","matrixLine","j","push","item","cell","classList","add","textContent","dataset","number","openAdditionalCell","event","cellIndex","findIndex","y","x","boardSize","toString","floor","arr","filter","forEach","contains","target","querySelector","innerHTML","movesCount","checked","Audio","play","body","html","layoutState","timer","parseInt","slice","minesCount","flagCount","savedData","jsonData","JSON","stringify","localStorage","setItem","counter","preventDefault","audio","createElementWithConfig","config","tagName","classes","attributes","children","element","createElement","className","Object","entries","key","value","setAttribute","childConfig","childElement","append","closeModal","overlay","closest","remove","style","overflow","addEventListener","generateMessage","result","wraper","modalBtn","text","gameOver","btn","soundSwitcher","bomb","firstElementChild","backgroundColor","clearInterval","removeListeners","closedCells","gameId","getItem","removeItem","mode","includes","split","time","board","removeEventListener","start","seconds","setInterval","firstStep","randomNumberArr","exclude","max","random","generateRandomNumberArr","index","surroundMinesCount","getSurround","generateBoard","main","id","cellConfig","prepend","controlsPanel","counterConfig","getElementById","addListeners","type","min","toggle","label","title","resultsList","getResultList","list","li","img","src","href","savedJson","parse","join"],"sourceRoot":""}