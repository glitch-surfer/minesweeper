{"version":3,"file":"bundle.js","mappings":"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","sources":["webpack://minesweeper/./src/scripts/addMinesNumber.js","webpack://minesweeper/./src/scripts/openCell.js","webpack://minesweeper/./src/scripts/playClickSound.js","webpack://minesweeper/./src/scripts/saveGame.js","webpack://minesweeper/./src/scripts/setFlag.js","webpack://minesweeper/./src/scripts/gameOver.js","webpack://minesweeper/./src/scripts/setResult.js","webpack://minesweeper/./src/scripts/timer.js","webpack://minesweeper/./src/scripts/firstStep.js","webpack://minesweeper/./src/scripts/generateMines.js","webpack://minesweeper/./src/scripts/generateBoard.js","webpack://minesweeper/./src/scripts/generateMain.js","webpack://minesweeper/./src/scripts/generateControlsPanel.js","webpack://minesweeper/./src/scripts/resetGame.js","webpack://minesweeper/./src/scripts/modeHandler.js","webpack://minesweeper/./src/scripts/loadGame.js","webpack://minesweeper/./src/scripts/generateOverlay.js","webpack://minesweeper/./src/scripts/generateResultModal.js","webpack://minesweeper/./src/index.js","webpack://minesweeper/./src/scripts/generateSettings.js","webpack://minesweeper/./src/scripts/swithTheme.js","webpack://minesweeper/./src/scripts/generateAboutModal.js","webpack://minesweeper/./src/scripts/soundIconSwitcher.js"],"sourcesContent":["export const createMatrix = () => {\n  const matrix = [];\n  const cells = document.querySelectorAll('.cell');\n  const matrixLineLength = Math.sqrt(cells.length);\n\n  for (let i = 0; i < cells.length; i += matrixLineLength) {\n    const matrixLine = [];\n\n    for (let j = 0; j < matrixLineLength; j += 1) {\n      matrixLine.push(cells[i + j]);\n    }\n\n    matrix.push(matrixLine);\n  }\n  return matrix;\n};\n\nconst getSurround = () => {\n  const matrix = createMatrix();\n  const surroundMinesCount = [];\n  for (let y = 0; y < matrix[0].length; y += 1) {\n    for (let x = 0; x < matrix[0].length; x += 1) {\n      const arr = [];\n      // test [y]?. -unnecessary ?.\n      arr.push(matrix[y - 1]?.[x]);\n      arr.push(matrix[y - 1]?.[x + 1]);\n      arr.push(matrix[y - 1]?.[x - 1]);\n      arr.push(matrix[y]?.[x + 1]);\n      arr.push(matrix[y]?.[x - 1]);\n      arr.push(matrix[y + 1]?.[x + 1]);\n      arr.push(matrix[y + 1]?.[x]);\n      arr.push(matrix[y + 1]?.[x - 1]);\n      surroundMinesCount.push(arr\n        .filter((item) => item && item.classList.contains('isBomb')).length);\n    }\n  }\n\n  return surroundMinesCount;\n};\n\nconst addMinesNumber = () => {\n  const cells = document.querySelectorAll('.cell');\n  const surroundMinesCount = getSurround();\n\n  cells.forEach((item, index) => {\n    const cell = item;\n    if (!cell.classList.contains('isBomb') && surroundMinesCount[index]) {\n      cell.dataset.number = surroundMinesCount[index];\n    }\n  });\n};\n\nexport default addMinesNumber;\n","import { createMatrix } from './addMinesNumber';\n\nconst open = (item) => {\n  const cell = item;\n  cell.classList.add('is-open');\n  cell.textContent = cell.dataset.number;\n};\n\nconst openAdditionalCell = (event) => {\n  const cell = event;\n  open(cell);\n\n  const matrix = createMatrix();\n  const cells = document.querySelectorAll('.cell');\n\n  const cellIndex = [...cells].findIndex((item) => item === cell);\n  let y;\n  let x;\n  if (document.boardSize === 10) {\n    // first variant befor upgrade to big board option, just for compare\n    y = cellIndex > document.boardSize - 1 ? +cellIndex.toString()[0] : 0;\n    x = cellIndex > document.boardSize - 1 ? +cellIndex.toString()[1] : cellIndex;\n  } else {\n    // universal beautifull solution\n    y = Math.floor(cellIndex / document.boardSize);\n    x = cellIndex % document.boardSize;\n  }\n\n  const arr = [];\n  arr.push(matrix[y - 1]?.[x]);\n  arr.push(matrix[y - 1]?.[x + 1]);\n  arr.push(matrix[y - 1]?.[x - 1]);\n  arr.push(matrix[y]?.[x + 1]);\n  arr.push(matrix[y]?.[x - 1]);\n  arr.push(matrix[y + 1]?.[x + 1]);\n  arr.push(matrix[y + 1]?.[x]);\n  arr.push(matrix[y + 1]?.[x - 1]);\n\n  const normalizedArr = arr.filter((item) => item && item.textContent !== '🚩');\n\n  normalizedArr.forEach((item) => {\n    if (!item.dataset.number && !item.classList.contains('is-open')) {\n      openAdditionalCell(item);\n    } else {\n      open(item);\n    }\n  });\n  // open this part, if you decide throw flag without mine when area opens\n  /* const activeFlags = [...cells].filter((item) => item.textContent === '🚩').length;\n  document.flagCount = document.minesCount - activeFlags;\n  document.querySelector('.counter').textContent = `Mines count: ${document.flagCount}`; */\n};\n\nconst openCell = (event) => {\n  const cell = event.target;\n  if (cell.classList.contains('cell') && !cell.classList.contains('isBomb') && !cell.textContent) {\n    if (!cell.classList.contains('is-open')) {\n      document.querySelector('.moves-count').innerHTML = `Your moves: ${document.movesCount += 1}`;\n\n      if (document.querySelector('.sound-switcher').checked) {\n        new Audio('../src/assets/sounds/empty-cell.mp3').play();\n      }\n    }\n    open(cell);\n    if (!cell.dataset.number) {\n      openAdditionalCell(cell);\n    }\n  }\n};\n\nexport default openCell;\n","const playClickSound = () => {\n  const audio = new Audio('../src/assets/sounds/click.mp3');\n  if (document.querySelector('.sound-switcher').checked) {\n    audio.play();\n  }\n};\n\nexport default playClickSound;\n","import playClickSound from './playClickSound';\n\nconst saveGame = () => {\n  if (!document.querySelector('.bomb')\n  && !document.body.classList.contains('win')\n  && document.querySelector('.isBomb')) {\n    playClickSound();\n\n    const main = document.querySelector('.main');\n    const html = main.innerHTML;\n    const layoutState = [...document.body.classList];\n    const timer = parseInt(document.querySelector('.timer').textContent.slice(6), 10);\n    const {\n      boardSize,\n      minesCount,\n      movesCount,\n      flagCount,\n    } = document;\n\n    const savedData = {\n      html,\n      layoutState,\n      boardSize,\n      minesCount,\n      movesCount,\n      flagCount,\n      timer,\n    };\n\n    const jsonData = JSON.stringify(savedData);\n    localStorage.setItem('savedGame', jsonData);\n  }\n};\n\nexport default saveGame;\n","const setFlag = (event) => {\n  const cell = event.target;\n  const counter = document.querySelector('.counter');\n  event.preventDefault();\n\n  if (cell.classList.contains('cell') && !cell.classList.contains('is-open')) {\n    const audio = new Audio('../src/assets/sounds/flag.mp3');\n\n    if (!cell.textContent) {\n      if (document.querySelector('.sound-switcher').checked) {\n        audio.play();\n      }\n\n      cell.textContent = '🚩';\n      document.flagCount -= 1;\n      counter.textContent = `Mines count: ${document.flagCount}`;\n    } else {\n      if (document.querySelector('.sound-switcher').checked) {\n        audio.play();\n      }\n      cell.textContent = '';\n      document.flagCount += 1;\n      counter.textContent = `Mines count: ${document.flagCount}`;\n    }\n  }\n};\n\nexport default setFlag;\n","import openCell from './openCell';\nimport saveGame from './saveGame';\nimport setFlag from './setFlag';\nimport setResult from './setResult';\n\nconst gameOver = (event) => {\n  const btn = document.querySelector('.btn');\n  const board = document.querySelector('.board');\n\n  if (event.target.textContent !== '🚩') {\n    if (event.target.classList.contains('isBomb')) {\n      const bombs = [...document.querySelectorAll('.cell')].filter((item) => item.classList.contains('isBomb'));\n\n      bombs.forEach((item) => {\n        const bomb = document.createElement('div');\n        bomb.classList.add('bomb');\n        item.classList.add('is-open');\n        item.textContent = '';\n        item.append(bomb);\n      });\n      if (document.querySelector('.sound-switcher').checked) {\n        new Audio('../src/assets/sounds/bomb.mp3').play();\n      }\n      event.target.firstElementChild.style.backgroundColor = 'red';\n\n      clearInterval(document.timer);\n      btn.textContent = '😩';\n\n      board.removeEventListener('click', openCell);\n      board.removeEventListener('contextmenu', setFlag);\n      board.removeEventListener('click', gameOver);\n      board.removeEventListener('click', saveGame);\n    } else {\n      const cells = document.querySelectorAll('.cell');\n      const closedCells = [...cells].filter((item) => !item.classList.contains('is-open'));\n\n      if (closedCells.length === document.minesCount) {\n        if (document.querySelector('.sound-switcher').checked) {\n          new Audio('../src/assets/sounds/win.mp3').play();\n        }\n        clearInterval(document.timer);\n        btn.textContent = '🤩';\n        document.body.classList.add('win');\n\n        board.removeEventListener('click', openCell);\n        board.removeEventListener('click', gameOver);\n        board.removeEventListener('contextmenu', setFlag);\n        board.removeEventListener('click', saveGame);\n\n        setResult();\n      }\n    }\n  }\n};\n\nexport default gameOver;\n","const setResult = () => {\n  const gameId = +localStorage.getItem('gameId') + 1 || 1;\n  const mode = document.body.classList.value.includes('layout')\n    ? document.body.classList.value.split(' ')[0].slice(0, 7)\n    : 'easy';\n  if (gameId > 10) {\n    localStorage.removeItem(`${gameId - 10}`);\n  }\n  localStorage.setItem(gameId, `Game #${gameId} _ Mode: ${mode} _ Time: ${document.querySelector('.timer').textContent.slice(7)} _ Moves: ${document.querySelector('.moves-count').textContent.slice(11)}`);\n\n  localStorage.setItem('gameId', gameId);\n};\n\nexport default setResult;\n","const setTimer = (start = 0) => {\n  let seconds = start;\n\n  document.timer = setInterval(() => {\n    document.querySelector('.timer').innerHTML = `Timer: ${seconds += 1} sec`;\n  }, 1000);\n};\n\nexport default setTimer;\n","import generateMines from './generateMines';\nimport addMinesNumber from './addMinesNumber';\nimport setTimer from './timer';\n\nconst firstStep = (event) => {\n  const board = document.querySelector('.board');\n\n  board.removeEventListener('click', firstStep);\n  generateMines(document.minesCount, event);\n  addMinesNumber();\n  setTimer();\n  document.querySelector('.btn').textContent = '😎';\n};\n\nexport default firstStep;\n","const getRandomNumber = (min, max) => Math.floor(Math.random() * (max - min + 1)) + min;\n\nconst generateRandomNumberArr = (length, exclude) => {\n  const arr = [];\n\n  while (arr.length < length) {\n    const number = getRandomNumber(0, document.boardSize ** 2 - 1);\n    if (!arr.includes(number) && number !== exclude) {\n      arr.push(number);\n    }\n  }\n  return arr;\n};\n\nconst generateMines = (minesCount, event) => {\n  const cells = document.querySelectorAll('.cell');\n  const firstClick = [...cells].findIndex((item) => item === event.target);\n  const randomNumberArr = generateRandomNumberArr(minesCount, firstClick);\n\n  const minedCells = [...cells].filter((item, index) => randomNumberArr.includes(index));\n\n  minedCells.forEach((item) => item.classList.add('isBomb'));\n};\n\nexport default generateMines;\n","import gameOver from './gameOver';\nimport openCell from './openCell';\nimport setFlag from './setFlag';\nimport firstStep from './firstStep';\nimport generateControlsPanel from './generateControlsPanel';\nimport generateMain from './generateMain';\nimport playClickSound from './playClickSound';\n\nexport const addListeners = () => {\n  const board = document.getElementById('board');\n\n  board.addEventListener('click', firstStep);\n  board.addEventListener('click', openCell);\n  board.addEventListener('click', gameOver);\n  board.addEventListener('contextmenu', setFlag);\n};\n\nconst generateBoard = () => {\n  document.movesCount = 0;\n\n  const main = generateMain();\n  main.prepend(generateControlsPanel());\n  document.body.append(main);\n\n  addListeners();\n\n  const resetGame = () => {\n    playClickSound();\n\n    clearInterval(document.timer);\n    document.querySelector('.timer').textContent = 'Timer: 0 sec';\n    document.querySelector('main').remove();\n    document.body.classList.remove('win');\n    generateBoard();\n  };\n  // reset game\n  document.querySelector('.btn').addEventListener('click', resetGame);\n};\n\nexport default generateBoard;\n","const generateMain = () => {\n  const main = document.createElement('main');\n  main.classList.add('main');\n\n  const board = document.createElement('div');\n  board.classList.add('board');\n  board.setAttribute('id', 'board');\n\n  for (let i = 0; i < document.boardSize ** 2; i += 1) {\n    const cell = document.createElement('div');\n    cell.classList.add('cell');\n    board.append(cell);\n  }\n\n  main.append(board);\n\n  return main;\n};\n\nexport default generateMain;\n","const generateControlsPanel = () => {\n  const header = document.createElement('div');\n  header.classList.add('controls-panel');\n\n  const movesCount = document.createElement('p');\n  movesCount.classList.add('moves-count');\n  movesCount.textContent = 'Your moves: 0';\n  header.append(movesCount);\n\n  const btn = document.createElement('btn');\n  btn.classList.add('btn');\n  btn.textContent = '😉';\n  header.append(btn);\n\n  document.flagCount = document.minesCount;\n  const counter = document.createElement('p');\n  counter.classList.add('counter');\n  counter.textContent = `Mines count: ${document.flagCount}`;\n  header.append(counter);\n\n  return header;\n};\n\nexport default generateControlsPanel;\n","import generateBoard from './generateBoard';\n\nconst resetGame = () => {\n  clearInterval(document.timer);\n  document.querySelector('.timer').textContent = 'Timer: 0 sec';\n  document.querySelector('main').remove();\n  document.body.classList.remove('win');\n  generateBoard();\n};\n\nexport default resetGame;\n","import resetGame from './resetGame';\nimport playClickSound from './playClickSound';\n\nconst modeHandler = (event) => {\n  playClickSound();\n\n  if (event.target.classList.contains('easy-mode')) {\n    document.boardSize = 10;\n    document.body.classList.remove('medium-layout');\n    document.body.classList.remove('suicide-layout');\n    document.querySelector('.mine-counter-selector').value = 10;\n    document.minesCount = 10;\n    resetGame();\n  } else if (event.target.classList.contains('medium-mode')) {\n    document.boardSize = 15;\n    document.body.classList.remove('suicide-layout');\n    document.body.classList.add('medium-layout');\n    document.querySelector('.mine-counter-selector').value = 25;\n    document.minesCount = 25;\n    resetGame();\n  } else if (event.target.classList.contains('suicide-mode')) {\n    document.boardSize = 25;\n    document.body.classList.remove('medium-layout');\n    document.body.classList.add('suicide-layout');\n    document.querySelector('.mine-counter-selector').value = 99;\n    document.minesCount = 99;\n    resetGame();\n  }\n};\n\nexport default modeHandler;\n","import resetGame from './resetGame';\nimport openCell from './openCell';\nimport setFlag from './setFlag';\nimport gameOver from './gameOver';\nimport setTimer from './timer';\nimport playClickSound from './playClickSound';\n\nconst loadGame = () => {\n  playClickSound();\n\n  if (localStorage.getItem('savedGame')) {\n    clearInterval(document.timer);\n\n    const savedJson = localStorage.getItem('savedGame');\n    const {\n      html,\n      layoutState,\n      boardSize,\n      minesCount,\n      movesCount,\n      flagCount,\n      timer,\n    } = JSON.parse(savedJson);\n\n    document.minesCount = minesCount;\n    document.boardSize = boardSize;\n    document.movesCount = movesCount;\n    document.flagCount = flagCount;\n\n    const main = document.querySelector('main');\n    main.innerHTML = html;\n    document.body.className = layoutState.join(' ');\n\n    const board = document.getElementById('board');\n    board.addEventListener('click', openCell);\n    board.addEventListener('click', gameOver);\n    board.addEventListener('contextmenu', setFlag);\n    document.querySelector('.btn').addEventListener('click', resetGame);\n\n    document.querySelector('.mine-counter-selector').value = minesCount;\n    setTimer(timer);\n  }\n};\n\nexport default loadGame;\n","const closeModal = (event) => {\n  if (!event.target.closest('.modal')) {\n    document.querySelector('.overlay').remove();\n    document.body.style.overflow = '';\n  } else if (event.target.closest('.btn-modal')) {\n    document.querySelector('.overlay').remove();\n    document.body.style.overflow = '';\n  }\n};\n\nconst generateOverlay = () => {\n  const overlay = document.createElement('div');\n  overlay.classList.add('overlay');\n  document.body.append(overlay);\n  document.body.style.overflow = 'hidden';\n  overlay.addEventListener('click', closeModal);\n};\n\nexport default generateOverlay;\n","import generateOverlay from './generateOverlay';\nimport playClickSound from './playClickSound';\n\nconst getResultList = () => {\n  const gameId = +localStorage.getItem('gameId');\n\n  const resultsList = [];\n  for (let i = 0; i < 10; i += 1) {\n    const item = localStorage.getItem(gameId - i);\n    resultsList.push(item);\n  }\n  return resultsList;\n};\n\nconst generateResultModal = () => {\n  playClickSound();\n\n  generateOverlay();\n  const overlay = document.querySelector('.overlay');\n  const title = document.createElement('h2');\n  title.classList.add('modal-title');\n  title.textContent = 'Latest Results';\n  overlay.append(title);\n\n  const resultsList = getResultList();\n  const list = document.createElement('ul');\n  list.classList.add('modal');\n\n  const modalBtn = document.createElement('button');\n  modalBtn.classList.add('btn-modal');\n  modalBtn.textContent = '✖';\n  list.append(modalBtn);\n\n  resultsList.forEach((item) => {\n    const li = document.createElement('li');\n    li.textContent = item;\n    list.append(li);\n  });\n\n  overlay.append(list);\n};\n\nexport default generateResultModal;\n","import './styles/style.scss';\nimport generateBoard from './scripts/generateBoard';\nimport generateSettings from './scripts/generateSettings';\nimport generateResultModal from './scripts/generateResultModal';\nimport switchTheme from './scripts/swithTheme';\nimport soundIconSwitcher from './scripts/soundIconSwitcher';\nimport generateAboutModal from './scripts/generateAboutModal';\n\ndocument.minesCount = 10;\ndocument.boardSize = 10;\n\ndocument.body.append(generateSettings());\ngenerateBoard();\n\ndocument.querySelector('.theme-switcher').addEventListener('click', switchTheme);\ndocument.querySelector('.btn-results').addEventListener('click', generateResultModal);\ndocument.querySelector('.about__btn').addEventListener('click', generateAboutModal);\ndocument.querySelector('label').addEventListener('click', soundIconSwitcher);\n","import resetGame from './resetGame';\nimport modeHandler from './modeHandler';\nimport saveGame from './saveGame';\nimport loadGame from './loadGame';\n\nconst generateSettings = () => {\n  const loadGameContainer = document.createElement('div');\n  loadGameContainer.classList.add('load-game-container');\n\n  const save = document.createElement('button');\n  save.textContent = 'Save';\n  save.classList.add('save');\n  save.addEventListener('click', saveGame);\n  loadGameContainer.append(save);\n\n  const load = document.createElement('button');\n  load.textContent = 'Load';\n  load.classList.add('load');\n  load.addEventListener('click', loadGame);\n  loadGameContainer.append(load);\n\n  const about = document.createElement('button');\n  about.textContent = 'About';\n  about.classList.add('about__btn');\n  loadGameContainer.append(about);\n\n  const modeContainer = document.createElement('div');\n  modeContainer.classList.add('mode');\n  modeContainer.addEventListener('click', modeHandler);\n\n  const easyMode = document.createElement('button');\n  easyMode.textContent = 'Easy';\n  easyMode.classList.add('easy-mode');\n  modeContainer.append(easyMode);\n\n  const mediumMode = document.createElement('button');\n  mediumMode.textContent = 'Medium';\n  mediumMode.classList.add('medium-mode');\n  modeContainer.append(mediumMode);\n\n  const suicideMode = document.createElement('button');\n  suicideMode.textContent = 'Suicide';\n  suicideMode.classList.add('suicide-mode');\n  modeContainer.append(suicideMode);\n\n  const mineCountDisplay = document.createElement('p');\n  mineCountDisplay.classList.add('settings-subtitle');\n  mineCountDisplay.textContent = 'Mines:';\n  modeContainer.append(mineCountDisplay);\n\n  const mineCountSelector = document.createElement('input');\n  mineCountSelector.classList.add('mine-counter-selector');\n  mineCountSelector.setAttribute('type', 'range');\n  mineCountSelector.setAttribute('value', '10');\n  mineCountSelector.setAttribute('min', '10');\n  mineCountSelector.setAttribute('max', '99');\n  mineCountSelector.addEventListener('input', (event) => {\n    document.querySelector('.counter').textContent = `Mines count: ${event.target.value}`;\n    document.minesCount = +event.target.value;\n    resetGame();\n  });\n  modeContainer.append(mineCountSelector);\n\n  const settingsContainer = document.createElement('div');\n  settingsContainer.classList.add('settings');\n  settingsContainer.classList.add('controls-panel');\n\n  const resultsBtn = document.createElement('button');\n  resultsBtn.classList.add('btn-results');\n  resultsBtn.textContent = 'results';\n  settingsContainer.append(resultsBtn);\n\n  const timer = document.createElement('p');\n  timer.classList.add('timer');\n  timer.textContent = 'Timer: 0 sec';\n  settingsContainer.append(timer);\n\n  const soundSwitcherWrapper = document.createElement('label');\n  const labelText = document.createElement('span');\n  labelText.textContent = '🔔';\n  soundSwitcherWrapper.append(labelText);\n  const soundSwitcher = document.createElement('input');\n  soundSwitcher.setAttribute('type', 'checkbox');\n  soundSwitcher.setAttribute('checked', 'true');\n  soundSwitcher.classList.add('sound-switcher');\n  soundSwitcherWrapper.append(soundSwitcher);\n  settingsContainer.append(soundSwitcherWrapper);\n\n  const themeSwitcher = document.createElement('button');\n  themeSwitcher.classList.add('theme-switcher');\n  settingsContainer.append(themeSwitcher);\n  themeSwitcher.addEventListener('click', (event) => {\n    event.target.classList.toggle('is-dark');\n  });\n\n  const header = document.createElement('header');\n  header.classList.add('header');\n  header.append(loadGameContainer);\n  header.append(modeContainer);\n  header.append(settingsContainer);\n  return header;\n};\n\nexport default generateSettings;\n","import playClickSound from './playClickSound';\n\nconst switchTheme = () => {\n  playClickSound();\n\n  document.body.classList.toggle('dark-theme');\n};\n\nexport default switchTheme;\n","import generateOverlay from './generateResultModal';\nimport playClickSound from './playClickSound';\n\nconst generateAboutModal = () => {\n  playClickSound();\n\n  generateOverlay();\n  const overlay = document.querySelector('.overlay');\n\n  const title = document.createElement('h2');\n  title.classList.add('modal-title');\n  title.textContent = 'About Game';\n  overlay.append(title);\n\n  const wraper = document.createElement('div');\n  wraper.classList.add('modal');\n  wraper.classList.add('about');\n\n  const modalBtn = document.createElement('button');\n  modalBtn.classList.add('btn-modal');\n  modalBtn.textContent = '✖';\n  wraper.append(modalBtn);\n\n  const img = document.createElement('img');\n  img.classList.add('about__img');\n  img.setAttribute('src', '../src/assets/img/about.png');\n  wraper.append(img);\n\n  const text = document.createElement('a');\n  text.setAttribute('href', 'https://github.com/glitch-surfer');\n  text.classList.add('about__text');\n  text.textContent = 'Made by Glitch_surfer';\n  wraper.append(text);\n\n  overlay.append(wraper);\n};\n\nexport default generateAboutModal;\n","import playClickSound from './playClickSound';\n\nconst soundIconSwitcher = (event) => {\n  playClickSound();\n\n  const label = event.target;\n  if (document.querySelector('.sound-switcher').checked) {\n    label.textContent = '🔕';\n  } else {\n    label.textContent = '🔔';\n  }\n};\n\nexport default soundIconSwitcher;\n"],"names":["createMatrix","matrix","cells","document","querySelectorAll","matrixLineLength","Math","sqrt","length","i","matrixLine","j","push","item","cell","classList","add","textContent","dataset","number","openAdditionalCell","event","cellIndex","findIndex","y","x","boardSize","toString","floor","arr","filter","forEach","contains","target","querySelector","innerHTML","movesCount","checked","Audio","play","audio","body","html","layoutState","timer","parseInt","slice","minesCount","flagCount","savedData","jsonData","JSON","stringify","localStorage","setItem","counter","preventDefault","gameOver","btn","board","bomb","createElement","append","firstElementChild","style","backgroundColor","clearInterval","removeEventListener","gameId","getItem","mode","value","includes","split","removeItem","start","seconds","setInterval","firstStep","randomNumberArr","exclude","max","random","generateRandomNumberArr","index","surroundMinesCount","getSurround","generateBoard","main","setAttribute","prepend","header","getElementById","addEventListener","addListeners","remove","savedJson","parse","className","join","closeModal","closest","overflow","overlay","title","resultsList","getResultList","list","modalBtn","li","loadGameContainer","save","load","about","modeContainer","easyMode","mediumMode","suicideMode","mineCountDisplay","mineCountSelector","settingsContainer","resultsBtn","soundSwitcherWrapper","labelText","soundSwitcher","themeSwitcher","toggle","wraper","img","text","label"],"sourceRoot":""}