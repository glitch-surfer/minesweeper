{"version":3,"file":"bundle.js","mappings":"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","sources":["webpack://minesweeper/./src/scripts/addMinesNumber.js","webpack://minesweeper/./src/scripts/openCell.js","webpack://minesweeper/./src/scripts/setFlag.js","webpack://minesweeper/./src/scripts/gameOver.js","webpack://minesweeper/./src/scripts/setResult.js","webpack://minesweeper/./src/scripts/firstStep.js","webpack://minesweeper/./src/scripts/generateMines.js","webpack://minesweeper/./src/scripts/timer.js","webpack://minesweeper/./src/scripts/generateBoard.js","webpack://minesweeper/./src/scripts/generateMain.js","webpack://minesweeper/./src/scripts/generateControlsPanel.js","webpack://minesweeper/./src/scripts/resetGame.js","webpack://minesweeper/./src/scripts/modeSwitcher.js","webpack://minesweeper/./src/scripts/generateResultModal.js","webpack://minesweeper/./src/index.js","webpack://minesweeper/./src/scripts/generateSettings.js","webpack://minesweeper/./src/scripts/swithTheme.js","webpack://minesweeper/./src/scripts/generateAboutModal.js","webpack://minesweeper/./src/scripts/soundIconSwitcher.js"],"sourcesContent":["export const createMatrix = () => {\n  const matrix = [];\n  const cells = document.querySelectorAll('.cell');\n  const matrixLineLength = Math.sqrt(cells.length);\n\n  for (let i = 0; i < cells.length; i += matrixLineLength) {\n    const matrixLine = [];\n\n    for (let j = 0; j < matrixLineLength; j += 1) {\n      matrixLine.push(cells[i + j]);\n    }\n\n    matrix.push(matrixLine);\n  }\n  return matrix;\n};\n\nconst getSurround = () => {\n  const matrix = createMatrix();\n  const surroundMinesCount = [];\n  for (let y = 0; y < matrix[0].length; y += 1) {\n    for (let x = 0; x < matrix[0].length; x += 1) {\n      const arr = [];\n      arr.push(matrix[y - 1]?.[x]);\n      arr.push(matrix[y - 1]?.[x + 1]);\n      arr.push(matrix[y - 1]?.[x - 1]);\n      arr.push(matrix[y]?.[x + 1]);\n      arr.push(matrix[y]?.[x - 1]);\n      arr.push(matrix[y + 1]?.[x + 1]);\n      arr.push(matrix[y + 1]?.[x]);\n      arr.push(matrix[y + 1]?.[x - 1]);\n      surroundMinesCount.push(arr\n        .filter((item) => item && item.isBomb).length);\n    }\n  }\n\n  return surroundMinesCount;\n};\n\nconst addMinesNumber = () => {\n  const cells = document.querySelectorAll('.cell');\n  const surroundMinesCount = getSurround();\n\n  cells.forEach((item, index) => {\n    const cell = item;\n    if (!cell.isBomb && surroundMinesCount[index]) {\n      cell.dataset.number = surroundMinesCount[index];\n    }\n  });\n};\n\nexport default addMinesNumber;\n","import { createMatrix } from './addMinesNumber';\n\nconst open = (item) => {\n  const cell = item;\n  cell.classList.add('is-open');\n  cell.textContent = cell.dataset.number;\n  cell.isOpen = true;\n};\n\nconst openAdditionalCell = (event) => {\n  const cell = event;\n  open(cell);\n\n  const matrix = createMatrix();\n  const cells = document.querySelectorAll('.cell');\n\n  const cellIndex = [...cells].findIndex((item) => item === cell);\n  let y;\n  let x;\n  if (document.boardSize === 10) {\n    // first variant befor upgrade to big board option, just for compare\n    y = cellIndex > document.boardSize - 1 ? +cellIndex.toString()[0] : 0;\n    x = cellIndex > document.boardSize - 1 ? +cellIndex.toString()[1] : cellIndex;\n  } else {\n    // universal beautifull solution\n    y = Math.floor(cellIndex / document.boardSize);\n    x = cellIndex % document.boardSize;\n  }\n\n  const arr = [];\n  arr.push(matrix[y - 1]?.[x]);\n  arr.push(matrix[y - 1]?.[x + 1]);\n  arr.push(matrix[y - 1]?.[x - 1]);\n  arr.push(matrix[y]?.[x + 1]);\n  arr.push(matrix[y]?.[x - 1]);\n  arr.push(matrix[y + 1]?.[x + 1]);\n  arr.push(matrix[y + 1]?.[x]);\n  arr.push(matrix[y + 1]?.[x - 1]);\n\n  const normalizedArr = arr.filter((item) => item && item.textContent !== '🚩');\n\n  normalizedArr.forEach((item) => {\n    if (!item.dataset.number && !item.isOpen) {\n      openAdditionalCell(item);\n    } else {\n      open(item);\n    }\n  });\n  // open this part, if you decide throw flag without mine when area opens\n  /* const activeFlags = [...cells].filter((item) => item.textContent === '🚩').length;\n  document.flagCount = document.minesCount - activeFlags;\n  document.querySelector('.counter').textContent = `Mines count: ${document.flagCount}`; */\n};\n\nconst openCell = (event) => {\n  const cell = event.target;\n  if (cell.classList.contains('cell') && !cell.isBomb && !cell.textContent) {\n    if (!cell.isOpen) {\n      document.querySelector('.moves-count').innerHTML = `Your moves: ${document.movesCount += 1}`;\n\n      if (document.querySelector('.sound-switcher').checked) {\n        new Audio('../src/assets/sounds/empty-cell.mp3').play();\n      }\n    }\n    open(cell);\n    if (!cell.dataset.number) {\n      openAdditionalCell(cell);\n    }\n  }\n};\n\nexport default openCell;\n","const setFlag = (event) => {\n  const cell = event.target;\n  const counter = document.querySelector('.counter');\n  event.preventDefault();\n\n  if (cell.classList.contains('cell') && !cell.isOpen) {\n    const audio = new Audio('../src/assets/sounds/flag.mp3');\n\n    if (!cell.closest('.cell').textContent) {\n      if (document.querySelector('.sound-switcher').checked) {\n        audio.play();\n      }\n\n      cell.textContent = '🚩';\n      document.flagCount -= 1;\n      counter.textContent = `Mines count: ${document.flagCount}`;\n    } else {\n      if (document.querySelector('.sound-switcher').checked) {\n        audio.play();\n      }\n      cell.textContent = '';\n      document.flagCount += 1;\n      counter.textContent = `Mines count: ${document.flagCount}`;\n    }\n  }\n};\n\nexport default setFlag;\n","import openCell from './openCell';\nimport setFlag from './setFlag';\nimport setResult from './setResult';\n\nconst gameOver = (event) => {\n  const btn = document.querySelector('.btn');\n  const board = document.querySelector('.board');\n\n  if (event.target.textContent !== '🚩') {\n    if (event.target.isBomb) {\n      const bombs = [...document.querySelectorAll('.cell')].filter((item) => item.isBomb);\n\n      bombs.forEach((item) => {\n        const bomb = document.createElement('div');\n        bomb.classList.add('bomb');\n        item.classList.add('is-open');\n        item.textContent = '';\n        item.append(bomb);\n      });\n      if (document.querySelector('.sound-switcher').checked) {\n        new Audio('../src/assets/sounds/bomb.mp3').play();\n      }\n      event.target.firstElementChild.style.backgroundColor = 'red';\n\n      clearInterval(document.timer);\n      btn.textContent = '😩';\n\n      board.removeEventListener('click', openCell);\n      board.removeEventListener('contextmenu', setFlag);\n      board.removeEventListener('click', gameOver);\n    } else {\n      const cells = document.querySelectorAll('.cell');\n      const closedCells = [...cells].filter((item) => !item.isOpen);\n\n      if (closedCells.length === document.minesCount) {\n        if (document.querySelector('.sound-switcher').checked) {\n          new Audio('../src/assets/sounds/win.mp3').play();\n        }\n        clearInterval(document.timer);\n        btn.textContent = '🤩';\n        document.body.classList.add('win');\n\n        board.removeEventListener('click', openCell);\n        board.removeEventListener('click', gameOver);\n        board.removeEventListener('contextmenu', setFlag);\n\n        setResult();\n      }\n    }\n  }\n};\n\nexport default gameOver;\n","const setResult = () => {\n  const gameId = +localStorage.getItem('gameId') + 1 || 1;\n  const mode = document.body.classList.value.includes('layout')\n    ? document.body.classList.value.split(' ')[0].slice(0, 7)\n    : 'easy';\n  if (gameId > 10) {\n    localStorage.removeItem(`${gameId - 10}`);\n  }\n  localStorage.setItem(gameId, `Game #${gameId} _ Mode: ${mode} _ Time: ${document.querySelector('.timer').textContent.slice(7)} _ Moves: ${document.querySelector('.moves-count').textContent.slice(11)}`);\n\n  localStorage.setItem('gameId', gameId);\n};\n\nexport default setResult;\n","import generateMines from './generateMines';\nimport addMinesNumber from './addMinesNumber';\nimport setTimer from './timer';\n\nconst firstStep = (event) => {\n  const board = document.querySelector('.board');\n\n  board.removeEventListener('click', firstStep);\n  generateMines(document.minesCount, event);\n  addMinesNumber();\n  setTimer();\n  document.querySelector('.btn').textContent = '😎';\n};\n\nexport default firstStep;\n","const getRandomNumber = (min, max) => Math.floor(Math.random() * (max - min + 1)) + min;\n\nconst generateRandomNumberArr = (length, exclude) => {\n  const arr = [];\n\n  while (arr.length < length) {\n    const number = getRandomNumber(0, document.boardSize ** 2 - 1);\n    if (!arr.includes(number) && number !== exclude) {\n      arr.push(number);\n    }\n  }\n  return arr;\n};\n\nconst generateMines = (minesCount, event) => {\n  const cells = document.querySelectorAll('.cell');\n  const firstClick = [...cells].findIndex((item) => item === event.target);\n  const randomNumberArr = generateRandomNumberArr(minesCount, firstClick);\n\n  const minedCells = [...cells].filter((item, index) => randomNumberArr.includes(index));\n\n  minedCells.forEach((item) => item.isBomb = true);\n};\n\nexport default generateMines;\n","const setTimer = () => {\n  let seconds = 0;\n\n  document.timer = setInterval(() => {\n    document.querySelector('.timer').innerHTML = `Timer: ${seconds += 1} sec`;\n  }, 1000);\n};\n\nexport default setTimer;\n","import gameOver from './gameOver';\nimport openCell from './openCell';\nimport setFlag from './setFlag';\nimport firstStep from './firstStep';\nimport generateControlsPanel from './generateControlsPanel';\nimport generateMain from './generateMain';\n\nconst generateBoard = () => {\n  document.movesCount = 0;\n\n  const main = generateMain();\n  main.prepend(generateControlsPanel());\n  document.body.append(main);\n\n  const board = document.getElementById('board');\n\n  board.addEventListener('click', firstStep);\n  board.addEventListener('click', openCell);\n  board.addEventListener('click', gameOver);\n  board.addEventListener('contextmenu', setFlag);\n\n  const resetGame = () => {\n    clearInterval(document.timer);\n    document.querySelector('.timer').textContent = 'Timer: 0 sec';\n    document.querySelector('main').remove();\n    document.body.classList.remove('win');\n    generateBoard();\n  };\n\n  // reset game\n  document.querySelector('.btn').addEventListener('click', resetGame);\n};\n\nexport default generateBoard;\n","const generateMain = () => {\n  const main = document.createElement('main');\n  main.classList.add('main');\n\n  const board = document.createElement('div');\n  board.classList.add('board');\n  board.setAttribute('id', 'board');\n\n  for (let i = 0; i < document.boardSize ** 2; i += 1) {\n    const cell = document.createElement('div');\n    cell.classList.add('cell');\n    board.append(cell);\n  }\n\n  main.append(board);\n\n  return main;\n};\n\nexport default generateMain;\n","const generateControlsPanel = () => {\n  const header = document.createElement('div');\n  header.classList.add('controls-panel');\n\n  const movesCount = document.createElement('p');\n  movesCount.classList.add('moves-count');\n  movesCount.textContent = 'Your moves: 0';\n  header.append(movesCount);\n\n  const btn = document.createElement('btn');\n  btn.classList.add('btn');\n  btn.textContent = '😉';\n  header.append(btn);\n\n  document.flagCount = document.minesCount;\n  const counter = document.createElement('p');\n  counter.classList.add('counter');\n  counter.textContent = `Mines count: ${document.flagCount}`;\n  header.append(counter);\n\n  return header;\n};\n\nexport default generateControlsPanel;\n","import generateBoard from './generateBoard';\n\nconst resetGame = () => {\n  clearInterval(document.timer);\n  document.querySelector('.timer').textContent = 'Timer: 0 sec';\n  document.querySelector('main').remove();\n  document.body.classList.remove('win');\n  generateBoard();\n};\n\nexport default resetGame;\n","import resetGame from './resetGame';\n\nconst modeSwitcher = (event) => {\n  if (event.target.classList.contains('easy-mode')) {\n    document.boardSize = 10;\n    document.body.classList.remove('medium-layout');\n    document.body.classList.remove('suicide-layout');\n    document.querySelector('input[type=\"range\"]').value = 10;\n    document.minesCount = 10;\n    resetGame();\n  } else if (event.target.classList.contains('medium-mode')) {\n    document.boardSize = 15;\n    document.body.classList.remove('suicide-layout');\n    document.body.classList.add('medium-layout');\n    document.querySelector('input[type=\"range\"]').value = 25;\n    document.minesCount = 25;\n    resetGame();\n  } else if (event.target.classList.contains('suicide-mode')) {\n    document.boardSize = 25;\n    document.body.classList.remove('medium-layout');\n    document.body.classList.add('suicide-layout');\n    document.querySelector('input[type=\"range\"]').value = 99;\n    document.minesCount = 99;\n    resetGame();\n  }\n};\n\nexport default modeSwitcher;\n","const getResultList = () => {\n  const gameId = +localStorage.getItem('gameId');\n\n  const resultsList = [];\n  for (let i = 0; i < 10; i += 1) {\n    const item = localStorage.getItem(gameId - i);\n    resultsList.push(item);\n  }\n  /* localStorage.clear() */\n  return resultsList;\n};\n\nconst closeModal = (event) => {\n  if (!event.target.closest('.modal')) {\n    document.querySelector('.overlay').remove();\n    document.body.style.overflow = '';\n  } else if (event.target.closest('.btn-modal')) {\n    document.querySelector('.overlay').remove();\n    document.body.style.overflow = '';\n  }\n};\n\nconst generateOverlay = () => {\n  const overlay = document.createElement('div');\n  overlay.classList.add('overlay');\n  document.body.append(overlay);\n  document.body.style.overflow = 'hidden';\n  overlay.addEventListener('click', closeModal);\n};\n\nconst generateResultModal = () => {\n  generateOverlay();\n  const overlay = document.querySelector('.overlay');\n  const title = document.createElement('h2');\n  title.classList.add('modal-title');\n  title.textContent = 'Latest Results';\n  overlay.append(title);\n\n  const resultsList = getResultList();\n  const list = document.createElement('ul');\n  list.classList.add('modal');\n\n  const modalBtn = document.createElement('button');\n  modalBtn.classList.add('btn-modal');\n  modalBtn.textContent = '✖';\n  list.append(modalBtn);\n\n  resultsList.forEach((item) => {\n    const li = document.createElement('li');\n    li.textContent = item;\n    list.append(li);\n  });\n\n  overlay.append(list);\n};\n\nexport { generateResultModal, generateOverlay, closeModal };\n","import './styles/style.scss';\nimport generateBoard from './scripts/generateBoard';\nimport generateSettings from './scripts/generateSettings';\nimport { generateResultModal } from './scripts/generateResultModal';\nimport switchTheme from './scripts/swithTheme';\nimport soundIconSwitcher from './scripts/soundIconSwitcher';\nimport generateAboutModal from './scripts/generateAboutModal';\n\ndocument.minesCount = 10;\ndocument.boardSize = 10;\n\ndocument.body.append(generateSettings());\ngenerateBoard();\n\ndocument.querySelector('.theme-switcher').addEventListener('click', switchTheme);\ndocument.querySelector('.btn-results').addEventListener('click', generateResultModal);\ndocument.querySelector('.about__btn').addEventListener('click', generateAboutModal);\ndocument.querySelector('label').addEventListener('click', soundIconSwitcher);\n/* document.querySelector('header').addEventListener('click', modeSwitcher); */\n\n/* document.addEventListener('click', firstStep); */\n","import resetGame from './resetGame';\nimport modeSwitcher from './modeSwitcher';\n\nconst generateSettings = () => {\n  const modeContainer = document.createElement('div');\n  modeContainer.classList.add('mode');\n  modeContainer.addEventListener('click', modeSwitcher);\n\n  const about = document.createElement('span');\n  about.textContent = 'About';\n  about.classList.add('about__btn');\n\n  const easyMode = document.createElement('span');\n  easyMode.textContent = 'Easy';\n  easyMode.classList.add('easy-mode');\n  modeContainer.append(easyMode);\n\n  const mediumMode = document.createElement('span');\n  mediumMode.textContent = 'Medium';\n  mediumMode.classList.add('medium-mode');\n  modeContainer.append(mediumMode);\n\n  const suicideMode = document.createElement('span');\n  suicideMode.textContent = 'Suicide';\n  suicideMode.classList.add('suicide-mode');\n  modeContainer.append(suicideMode);\n\n  const mineCountDisplay = document.createElement('p');\n  mineCountDisplay.classList.add('settings-subtitle');\n  mineCountDisplay.textContent = 'Mines:';\n  modeContainer.append(mineCountDisplay);\n\n  const mineCountSelector = document.createElement('input');\n  mineCountSelector.setAttribute('type', 'range');\n  mineCountSelector.setAttribute('value', '10');\n  mineCountSelector.setAttribute('min', '10');\n  mineCountSelector.setAttribute('max', '99');\n  mineCountSelector.addEventListener('input', (event) => {\n    document.querySelector('.counter').textContent = `Mines count: ${event.target.value}`;\n    document.minesCount = +event.target.value;\n    resetGame();\n  });\n  modeContainer.append(mineCountSelector);\n\n  const settingsContainer = document.createElement('div');\n  settingsContainer.classList.add('settings');\n  settingsContainer.classList.add('controls-panel');\n\n  const resultsBtn = document.createElement('button');\n  resultsBtn.classList.add('btn-results');\n  resultsBtn.textContent = 'results';\n  settingsContainer.append(resultsBtn);\n\n  const timer = document.createElement('p');\n  timer.classList.add('timer');\n  timer.textContent = 'Timer: 0 sec';\n  settingsContainer.append(timer);\n\n  const soundSwitcherWrapper = document.createElement('label');\n  const labelText = document.createElement('span');\n  labelText.textContent = '🔔';\n  soundSwitcherWrapper.append(labelText);\n  const soundSwitcher = document.createElement('input');\n  soundSwitcher.setAttribute('type', 'checkbox');\n  soundSwitcher.setAttribute('checked', 'true');\n  soundSwitcher.classList.add('sound-switcher');\n  soundSwitcherWrapper.append(soundSwitcher);\n  settingsContainer.append(soundSwitcherWrapper);\n\n  const themeSwitcher = document.createElement('button');\n  themeSwitcher.classList.add('theme-switcher');\n  settingsContainer.append(themeSwitcher);\n  themeSwitcher.addEventListener('click', (event) => {\n    event.target.classList.toggle('is-dark');\n  });\n\n  const header = document.createElement('header');\n  header.classList.add('header');\n  header.append(about);\n  header.append(modeContainer);\n  header.append(settingsContainer);\n  return header;\n};\n\nexport default generateSettings;\n","const switchTheme = () => {\n  document.body.classList.toggle('dark-theme');\n};\n\nexport default switchTheme;\n","import { closeModal } from './generateResultModal';\nimport { generateOverlay } from './generateResultModal';\n\nconst generateAboutModal = () => {\n  generateOverlay();\n  const overlay = document.querySelector('.overlay');\n\n  const title = document.createElement('h2');\n  title.classList.add('modal-title');\n  title.textContent = 'About Game';\n  overlay.append(title);\n\n  const wraper = document.createElement('div');\n  wraper.classList.add('modal');\n  wraper.classList.add('about');\n\n  const modalBtn = document.createElement('button');\n  modalBtn.classList.add('btn-modal');\n  modalBtn.textContent = '✖';\n  wraper.append(modalBtn);\n\n  const img = document.createElement('img');\n  img.classList.add('about__img');\n  img.setAttribute('src', '../src/assets/img/about.png');\n  wraper.append(img);\n\n  const text = document.createElement('a');\n  text.setAttribute('href', 'https://github.com/glitch-surfer');\n  text.classList.add('about__text');\n  text.textContent = 'Made by Glitch_surfer';\n  wraper.append(text);\n\n  overlay.append(wraper);\n};\n\nexport default generateAboutModal;\n","const soundIconSwitcher = (event) => {\n  const label = event.target;\n  if (document.querySelector('.sound-switcher').checked) {\n    label.textContent = '🔕';\n  } else {\n    label.textContent = '🔔';\n  }\n};\n\nexport default soundIconSwitcher;\n"],"names":["createMatrix","matrix","cells","document","querySelectorAll","matrixLineLength","Math","sqrt","length","i","matrixLine","j","push","item","cell","classList","add","textContent","dataset","number","isOpen","openAdditionalCell","event","cellIndex","findIndex","y","x","boardSize","toString","floor","arr","filter","forEach","target","contains","isBomb","querySelector","innerHTML","movesCount","checked","Audio","play","counter","preventDefault","audio","closest","flagCount","gameOver","btn","board","bomb","createElement","append","firstElementChild","style","backgroundColor","clearInterval","timer","removeEventListener","minesCount","body","gameId","localStorage","getItem","mode","value","includes","split","slice","removeItem","setItem","firstStep","randomNumberArr","exclude","max","random","generateRandomNumberArr","index","surroundMinesCount","getSurround","seconds","setInterval","generateBoard","main","setAttribute","prepend","header","getElementById","addEventListener","remove","closeModal","overflow","generateOverlay","overlay","modeContainer","about","easyMode","mediumMode","suicideMode","mineCountDisplay","mineCountSelector","settingsContainer","resultsBtn","soundSwitcherWrapper","labelText","soundSwitcher","themeSwitcher","toggle","title","resultsList","getResultList","list","modalBtn","li","wraper","img","text","label"],"sourceRoot":""}